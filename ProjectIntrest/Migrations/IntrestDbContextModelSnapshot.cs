// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectIntrest.Model;

#nullable disable

namespace ProjectIntrest.Migrations
{
    [DbContext(typeof(IntrestDbContext))]
    partial class IntrestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjectIntrest.Model.Follower", b =>
                {
                    b.Property<int>("followerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("followerId"), 1L, 1);

                    b.Property<int?>("followed_Id")
                        .HasColumnType("int");

                    b.Property<int?>("user_Id")
                        .HasColumnType("int");

                    b.HasKey("followerId");

                    b.HasIndex("followed_Id");

                    b.HasIndex("user_Id");

                    b.ToTable("Follower", (string)null);
                });

            modelBuilder.Entity("ProjectIntrest.Model.Intrest", b =>
                {
                    b.Property<int>("intrestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intrestId"), 1L, 1);

                    b.Property<int?>("intrestCategory_Id")
                        .HasColumnType("int");

                    b.Property<string>("intrestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intrestId");

                    b.HasIndex("intrestCategory_Id");

                    b.ToTable("Intrest", (string)null);
                });

            modelBuilder.Entity("ProjectIntrest.Model.IntrestsCategory", b =>
                {
                    b.Property<int>("intrestCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intrestCategoryId"), 1L, 1);

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("user_Id")
                        .HasColumnType("int");

                    b.HasKey("intrestCategoryId");

                    b.HasIndex("user_Id");

                    b.ToTable("IntrestsCategory", (string)null);
                });

            modelBuilder.Entity("ProjectIntrest.Model.Message", b =>
                {
                    b.Property<int>("messageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("messageId"), 1L, 1);

                    b.Property<string>("actualMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("messegeFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("receiver_Id")
                        .HasColumnType("int");

                    b.Property<int?>("user_Id")
                        .HasColumnType("int");

                    b.HasKey("messageId");

                    b.HasIndex("receiver_Id");

                    b.HasIndex("user_Id");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("ProjectIntrest.Model.Pin", b =>
                {
                    b.Property<int>("pinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pinId"), 1L, 1);

                    b.Property<int?>("post_Id")
                        .HasColumnType("int");

                    b.Property<int?>("user_Id")
                        .HasColumnType("int");

                    b.HasKey("pinId");

                    b.HasIndex("post_Id");

                    b.HasIndex("user_Id");

                    b.ToTable("Pin", (string)null);
                });

            modelBuilder.Entity("ProjectIntrest.Model.Post", b =>
                {
                    b.Property<int>("postId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("postId"), 1L, 1);

                    b.Property<string>("audio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("user_Id")
                        .HasColumnType("int");

                    b.HasKey("postId");

                    b.HasIndex("user_Id");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("ProjectIntrest.Model.Reply", b =>
                {
                    b.Property<int>("replyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("replyId"), 1L, 1);

                    b.Property<int?>("post_Id")
                        .HasColumnType("int");

                    b.Property<string>("reply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("user_Id")
                        .HasColumnType("int");

                    b.HasKey("replyId");

                    b.HasIndex("post_Id");

                    b.HasIndex("user_Id");

                    b.ToTable("Reply", (string)null);
                });

            modelBuilder.Entity("ProjectIntrest.Model.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"), 1L, 1);

                    b.Property<string>("avatarPhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phoneNo")
                        .HasColumnType("int");

                    b.Property<string>("photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectIntrest.Model.Follower", b =>
                {
                    b.HasOne("ProjectIntrest.Model.User", "fuser")
                        .WithMany("ffollowers")
                        .HasForeignKey("followed_Id");

                    b.HasOne("ProjectIntrest.Model.User", "user")
                        .WithMany("followers")
                        .HasForeignKey("user_Id");

                    b.Navigation("fuser");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ProjectIntrest.Model.Intrest", b =>
                {
                    b.HasOne("ProjectIntrest.Model.IntrestsCategory", "intrestsCategorie")
                        .WithMany("intrests")
                        .HasForeignKey("intrestCategory_Id");

                    b.Navigation("intrestsCategorie");
                });

            modelBuilder.Entity("ProjectIntrest.Model.IntrestsCategory", b =>
                {
                    b.HasOne("ProjectIntrest.Model.User", "user")
                        .WithMany("intrestCategories")
                        .HasForeignKey("user_Id");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ProjectIntrest.Model.Message", b =>
                {
                    b.HasOne("ProjectIntrest.Model.User", "ruser")
                        .WithMany("rmessages")
                        .HasForeignKey("receiver_Id");

                    b.HasOne("ProjectIntrest.Model.User", "user")
                        .WithMany("messages")
                        .HasForeignKey("user_Id");

                    b.Navigation("ruser");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ProjectIntrest.Model.Pin", b =>
                {
                    b.HasOne("ProjectIntrest.Model.Post", "post")
                        .WithMany("pins")
                        .HasForeignKey("post_Id");

                    b.HasOne("ProjectIntrest.Model.User", "user")
                        .WithMany("pins")
                        .HasForeignKey("user_Id");

                    b.Navigation("post");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ProjectIntrest.Model.Post", b =>
                {
                    b.HasOne("ProjectIntrest.Model.User", "user")
                        .WithMany("posts")
                        .HasForeignKey("user_Id");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ProjectIntrest.Model.Reply", b =>
                {
                    b.HasOne("ProjectIntrest.Model.Post", "post")
                        .WithMany("replies")
                        .HasForeignKey("post_Id");

                    b.HasOne("ProjectIntrest.Model.User", "user")
                        .WithMany("replies")
                        .HasForeignKey("user_Id");

                    b.Navigation("post");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ProjectIntrest.Model.IntrestsCategory", b =>
                {
                    b.Navigation("intrests");
                });

            modelBuilder.Entity("ProjectIntrest.Model.Post", b =>
                {
                    b.Navigation("pins");

                    b.Navigation("replies");
                });

            modelBuilder.Entity("ProjectIntrest.Model.User", b =>
                {
                    b.Navigation("ffollowers");

                    b.Navigation("followers");

                    b.Navigation("intrestCategories");

                    b.Navigation("messages");

                    b.Navigation("pins");

                    b.Navigation("posts");

                    b.Navigation("replies");

                    b.Navigation("rmessages");
                });
#pragma warning restore 612, 618
        }
    }
}
